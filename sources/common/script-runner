# run the make script

# prepare few helper variables to ease coding
## final destination of the installation, generally speaking the value shall be set as prefix
package_prefix="${stow_directory}/${package}"
## location of the source
source_directory="${stow_directory}/${package}.build"
## location to which temporary result shall be installed
package_directory="${stow_directory}/${package}.new"
## standard prefix to access file in the temporary install destination
### if we have configured PREFIX=/foo and are installing to temporary destination at /bar,
###  this will result to the files being installed into /bar/foo/...
###  the file that will be installed to /foo/bin/a should be found at /bar/foo/bin/a
###  this variable will make accessing files in the temporary destination simpler
package_content_directory="${stow_directory}/${package}.new${package_prefix}"

# call the function to download source
if [ -z "${NENV_SKIP_SOURCE}" ] && [ "$(type -t nenv_make_source 2>/dev/null)" = 'function' ];then
  log-cyan '==> preparing source...\n'
  mkdir --parent "${source_directory}"
  nenv_make_source
  log-green '==> source prepared\n'
fi

# call the function to prepare before the build
if [ -z "${NENV_SKIP_PREPARE}" ] && [ "$(type -t nenv_make_prepare 2>/dev/null)" = 'function' ];then
  log-cyan '==> preparing for build...\n'
  nenv_make_prepare
  log-green '==> ready to build\n'
fi

# call the function to build
if [ -z "${NENV_SKIP_BUILD}" ] && [ "$(type -t nenv_make_build 2>/dev/null)" = 'function' ];then
  log-cyan '==> building...\n'
  nenv_make_build
  log-green '==> package built\n'
fi

# call the function to check the build
if [ -z "${NENV_SKIP_CHECK}" ] && [ "$(type -t nenv_make_check 2>/dev/null)" = 'function' ];then
  log-cyan '==> checking the build...\n'
  nenv_make_check
  log-green '==> building result checked\n'
fi

# call the function to install to the temporary destination
if [ -z "${NENV_SKIP_PACK}" ] && [ "$(type -t nenv_make_pack 2>/dev/null)" = 'function' ];then
  log-cyan '==> packing...\n'
  mkdir --parent "${package_directory}"
  nenv_make_pack
  log-green '==> package is packed\n'
fi

# call the function to install to the final destination
if [ -z "${NENV_SKIP_INSTALL}" ] && [ "$(type -t nenv_make_install 2>/dev/null)" = 'function' ];then
  log-cyan '==> installing...\n'
  nenv_make_install
  log-green '==> finished\n'
fi