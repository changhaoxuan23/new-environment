#!/bin/bash
# utility functions that are useable and useful not only in a packing building environment

# output helpers
# make output colorful, all functions in this class requires no global variable
declare -A _execution_environment_color_mapping=(
  [red]='\x1b[1;31m'
  [green]='\x1b[1;32m'
  [yellow]='\x1b[1;33m'
  [blue]='\x1b[1;34m'
  [magenta]='\x1b[1;35m'
  [cyan]='\x1b[1;36m'
  [white]='\x1b[1;37m'
)
for color in "${!_execution_environment_color_mapping[@]}";do
  eval "log-${color}(){ printf -- '${_execution_environment_color_mapping[${color}]}'; printf -- \"\$@\"; printf -- '\x1b[0m'; }"
done

# retry remove until we success, use this to replace rm -rf
#  we need this since it seems like that NFS may create some internal file entry which fails rm -rf calls
stable-remove-directory(){
  while ! rm -rf "$@";do
    sleep 2
  done
}

# format semantic version code into integers with semantical order preserved
format-semantic-version(){
  local splited_code
  mapfile -d '.' -t splited_code < <(echo -n "$1")
  printf -- '%d' "$((splited_code[0]*1000000+splited_code[1]*1000+splited_code[2]))"
}

# build git version
#  current working directory should be in the git work tree
build-git-version(){
  new_version="$( set -o pipefail
    git describe --long --abbrev=7 --tags 2>/dev/null | sed -e 's/\([^-]*-g\)/r\1/;s/-/./g' -E -e 's/^[^0-9]*(.+)$/\1/' ||
    printf "r%s.%s" "$(git rev-list --count HEAD)" "$(git rev-parse --short=7 HEAD)"
  )"
}

# ask a true or false question
#  pass the question as the only argument
confirm(){
  read -p "$1[y/n]: " -r answer
  if [ "${answer}" = 'y' ] || [ "${answer}" = 'Y' ];then
    return 0;
  fi
  return 1
}